name: yamdb workflow

on: [push]

jobs:
  tests:
    name: Initial project's tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt

    - name: Correspondence to PEP8 and start pytest
      run: |
        cd api_yamdb/
        python -m flake8
        cd ..
        pytest

  build_and_push_to_docker_hub:
    name: Build and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repository avaliabillity
      uses: actions/checkout@v3 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker Hub login 
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push image to Docker Hub
      uses: docker/build-push-action@v3
      with:
        context: api_yamdb/
        push: true
        tags: doerymi/yamdb_final:latest

  deploy:
    name: Deploy from Docker Hub to the Server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        scripts: |
          sudo docker pull doerymi/yamdb_final
          sudo docker-compose stop
          sudo docker-compose rm web
          sudo touch .env
          sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          sudo docker-compose up -d 

  send_report_message:
    name: Send message to telegram chat
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            ${{ github.actor }} выполнил commit.
            Commit message: ${{ github.event.commits[0].message }}
            Репозиторий: ${{ github.repository }}
            ${{ github.workflow }} выполнен успешно, поздравляю!
            Изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}
